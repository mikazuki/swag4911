<?xml version="1.0" encoding="ASCII"?>
<metamodel:SWA xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:metamodel="http://www.example.org/metamodel" xsi:schemaLocation="http://www.example.org/metamodel metamodel/metamodel.ecore">
  <models name="swag49.model.map" isContainerManaged="true">
    <entities name="Action" persistenceSuperclass="true" persistenceListener="swag49.model.listener.ActionPersistenceEventEntityListener">
      <members name="startDate" type="java.util.Date">
        <column/>
      </members>
      <members name="duration" type="Long">
        <column/>
      </members>
      <members name="target" complexType="//@models.0/@entities.2" persistenceRelation="ManyToOne"/>
      <members name="player" complexType="//@models.0/@entities.1" persistenceRelation="ManyToOne"/>
      <members name="isAbortable" type="Boolean"/>
      <specialMethod>public java.util.Date getEndDate() {&#xA;        if (startDate == null || duration == null)&#xA;            return null;&#xA;&#xA;        return new java.util.Date(startDate.getTime() + duration);&#xA;    }</specialMethod>
    </entities>
    <entities name="Player"/>
    <entities name="Tile"/>
    <entities name="Base">
      <members name="home" type="Boolean">
        <column/>
      </members>
      <members name="owner" complexType="//@models.0/@entities.1" persistenceRelation="ManyToOne" persistenceMappedBy=""/>
      <members name="locatedOn" complexType="//@models.0/@entities.2" persistenceRelation="OneToOne" persistenceMappedBy=""/>
      <members name="consistsOf" complexType="//@models.0/@entities.7" hasMultipleValues="true" persistenceRelation="OneToMany" persistenceMappedBy="base" persistenceOptional="true"/>
      <members name="resourceProduction" complexType="//@models.0/@entities.4">
        <attributeOverride>
          <attributeOverrides name="amount_gold" column="production_gold"/>
          <attributeOverrides name="amount_stone" column="production_stone"/>
          <attributeOverrides name="amount_wood" column="production_wood"/>
          <attributeOverrides name="amount_crops" column="production_crops"/>
        </attributeOverride>
      </members>
      <specialConstructor>public Base(Tile tile) {&#xA;        this();&#xA;        this.locatedOn = tile;&#xA;    }</specialConstructor>
    </entities>
    <entities name="ResourceValue" persistenceEmbeddable="true"/>
    <entities name="BuildAction" superClass="//@models.0/@entities.0">
      <members name="concerns" complexType="//@models.0/@entities.6" persistenceRelation="ManyToOne"/>
    </entities>
    <entities name="Building" persistenceTableName="" specialID="@javax.persistence.EmbeddedId&#xA;    private Square.Id id = new Square.Id();">
      <members name="square" complexType="//@models.0/@entities.7" persistenceRelation="OneToOne">
        <persistenceCascadeType>CascadeType.MERGE</persistenceCascadeType>
        <joincolumns>
          <column name="baseId"/>
          <column name="position"/>
        </joincolumns>
      </members>
      <members name="type" complexType="//@models.0/@entities.8" persistenceRelation="ManyToOne"/>
      <members name="isOfLevel" complexType="//@models.0/@entities.9" persistenceRelation="ManyToOne"/>
      <members name="active" type="Boolean"/>
      <specialConstructor>public Building(Square square) {&#xA;        this.square = square;&#xA;        this.id = new Square.Id(square.getBase().getId(), square.getPosition());&#xA;&#xA;        //&#x9;square.setBuilding(this);&#xA;    }</specialConstructor>
      <specialMethod>public Square.Id getId() {&#xA;        return id;&#xA;    }</specialMethod>
    </entities>
    <entities name="Square">
      <members name="base" type="" complexType="//@models.0/@entities.3" persistenceRelation="ManyToOne">
        <joincolumn name="baseId"/>
      </members>
      <members name="building" complexType="//@models.0/@entities.6" persistenceRelation="OneToOne" persistenceMappedBy="square" persistenceOptional="true"/>
      <embeddedId name="Id">
        <members name="baseId" type="Long"/>
        <members name="position" type="Integer"/>
        <specialConstructor>public Id(long baseId, int position) {&#xA;            super();&#xA;            this.baseId = baseId;&#xA;            this.position = position;&#xA;        }&#xA;</specialConstructor>
      </embeddedId>
      <specialConstructor>public Square(Base base, int position) {&#xA;        this.base = base;&#xA;        this.id.baseId = base.getId();&#xA;        this.id.position = position;&#xA;&#xA;        base.getConsistsOf().add(this);&#xA;    }</specialConstructor>
      <specialMethod>public Integer getPosition() {&#xA;        return id.position;&#xA;    }</specialMethod>
    </entities>
    <entities name="BuildingType">
      <members name="name" type="String">
        <column/>
      </members>
      <members name="levels" complexType="//@models.0/@entities.9" hasMultipleValues="true" persistenceRelation="OneToMany">
        <persistenceCascadeType>CascadeType.ALL</persistenceCascadeType>
      </members>
    </entities>
    <entities name="BuildingLevel" superClass="//@models.0/@entities.10" persistenceTableName="">
      <members name="buildingType" complexType="//@models.0/@entities.8" persistenceRelation="ManyToOne">
        <joincolumn name="buildingTypeId"/>
      </members>
      <members name="resourceProduction" complexType="//@models.0/@entities.4">
        <attributeOverride>
          <attributeOverrides name="amount_gold" column="production_gold"/>
          <attributeOverrides name="amount_stone" column="production_stone"/>
          <attributeOverrides name="amount_wood" column="production_wood"/>
          <attributeOverrides name="amount_crops" column="production_crops"/>
        </attributeOverride>
      </members>
      <embeddedId name="Id">
        <members name="level" type="Integer"/>
        <members name="buildingTypeId" type="Long"/>
        <specialConstructor>public Id(int level, long buildingTypeId) {&#xA;&#x9;&#x9;&#x9;this.level = level;&#xA;&#x9;&#x9;&#x9;this.buildingTypeId = buildingTypeId;&#xA;&#x9;&#x9;}</specialConstructor>
      </embeddedId>
      <specialConstructor>public BuildingLevel(BuildingType buildingType, int level) {&#xA;&#x9;&#x9;this.buildingType = buildingType;&#xA;&#xA;&#x9;&#x9;this.id.buildingTypeId = buildingType.getId();&#xA;&#x9;&#x9;this.id.level = level;&#xA;&#xA;&#x9;&#x9;this.buildingType.getLevels().add(this);&#xA;&#x9;}</specialConstructor>
      <specialMethod>@Override&#xA;&#x9;public Integer getLevel() {&#xA;&#x9;&#x9;return id.level;&#xA;&#x9;}</specialMethod>
    </entities>
    <entities name="LevelBase" persistenceSuperclass="true" noID="true">
      <specialMethod>public abstract Integer getLevel();</specialMethod>
    </entities>
  </models>
  <models name="swag49.model.user" isContainerManaged="true">
    <entities name="Address" persistenceEmbeddable="true" persistenceTableName="">
      <members name="state" type="String"/>
      <members name="city" type="String"/>
      <members name="postalCode" type="String"/>
      <members name="street" type="String"/>
    </entities>
    <entities name="MapLocation">
      <members name="url" type="String">
        <column persistenceUnique="true"/>
      </members>
      <members name="mapName" type="String"/>
    </entities>
    <entities name="User" persistenceTableName="SWAG_User">
      <members name="username" type="String">
        <column persistenceUnique="true" persistenceLength="50"/>
      </members>
      <members name="password" type="String">
        <column persistenceLength="50"/>
      </members>
      <members name="firstName" type="String">
        <column persistenceNullable="true" persistenceLength="255"/>
      </members>
      <members name="lastName" type="String">
        <column persistenceNullable="true" persistenceLength="100"/>
      </members>
      <members name="utcOffset" type="Integer">
        <column/>
      </members>
      <members name="mapLocations" complexType="//@models.1/@entities.1" hasMultipleValues="true" persistenceRelation="ManyToMany" persistenceMappedBy="" persistenceOptional="true"/>
      <members name="address" complexType="//@models.1/@entities.0"/>
    </entities>
    <daos daoFor="//@models.1/@entities.1" name="MapLocationDAO" persistenceInjection="Member"/>
    <daos daoFor="//@models.1/@entities.2" name="UserDAO"/>
  </models>
</metamodel:SWA>
